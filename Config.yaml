esphome:
  name: esphome--bedroom
  friendly_name: EspHome - Bedroom

esp32:
  board: upesy_wroom
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "UnupMHjYSLkCxrqfhVUKyx1OmWYewFPNCerQQgAqez0="

ota:
  - platform: esphome
    password: "1913b1659da87dc30dc0437cd1f0699a"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome--Bedroom"
    password: "$iddhart@Wif@0152"

captive_portal:

# Relays Configuration
switch:
  - platform: gpio
    pin:
      number: 23
      inverted: true
    name: "Relay 1 - Bedroom Night Light"
    id: bedroom_night_light

  - platform: gpio
    pin:
      number: 22
      inverted: true
    name: "Relay 2 - Bathroom Light"
    id: bathroom_light

  - platform: gpio
    pin:
      number: 21
      inverted: true
    name: "Relay 3 - Bedroom Light"
    id: bedroom_light
    restore_mode: RESTORE_DEFAULT_OFF

  - platform: gpio
    pin:
      number: 19
      inverted: true
    name: "Relay 4 - Bedroom Fan"
    id: bedroom_fan
    restore_mode: RESTORE_DEFAULT_OFF


#   - platform: template
#     name: "Buzzer Control"
#     id: buzzer_switch
#     optimistic: true

# output:
#   - platform: gpio
#     pin: GPIO15
#     inverted: true
#     id: buzzer_output

# interval:
#   - interval: 0.5s
#     then:
#       - if:
#           condition:
#             switch.is_on: buzzer_switch
#           then:
#             - lambda: |-
#                 static bool state = false;
#                 state = !state;
#                 if (state) {
#                   id(buzzer_output).turn_on();
#                 } else {
#                   id(buzzer_output).turn_off();
#                 }
#           else:
#             - output.turn_off: buzzer_output

  - platform: template
    name: "Buzzer Control"
    id: buzzer_switch
    optimistic: true

output:
  - platform: gpio
    pin: GPIO15
    inverted: true
    id: buzzer_output

number:
  - platform: template
    name: "Buzzer Interval"
    id: buzzer_interval
    optimistic: true
    min_value: 0.1
    max_value: 2.0
    step: 0.1
    unit_of_measurement: "s"
    icon: "mdi:timer"

interval:
  - interval: 0.1s
    then:
      - if:
          condition:
            switch.is_on: buzzer_switch
          then:
            - lambda: |-
                static bool state = false;
                static float interval_counter = 0;
                interval_counter += 0.1;
                if (interval_counter >= id(buzzer_interval).state) {
                  state = !state;
                  interval_counter = 0;
                  if (state) {
                    id(buzzer_output).turn_on();
                  } else {
                    id(buzzer_output).turn_off();
                  }
                }
          else:
            - output.turn_off: buzzer_output


# Toggle Switches for Manual Control
binary_sensor:
  - platform: gpio
    pin:
      number: 18
      inverted: true
      mode: INPUT_PULLUP
    name: "Fan Manual Control"
    id: manual_Fan
    on_state:
      then:
        - if:
            condition:
              binary_sensor.is_on: manual_Fan
            then:
              - switch.turn_on: bedroom_fan
            else:
              - switch.turn_off: bedroom_fan

  - platform: gpio
    pin:
      number: 25
      inverted: true
      mode: INPUT_PULLUP
    name: "Bathroom Light Manual Control"
    id: manual_Bathroom_light
    on_state:
      then:
        - if:
            condition:
              binary_sensor.is_on: manual_Bathroom_light
            then:
              - switch.turn_on: bathroom_light
            else:
              - switch.turn_off: bathroom_light

  - platform: gpio
    pin:
      number: 17
      inverted: true
      mode: INPUT_PULLUP
    name: "Bedroom Light Manual Control"
    id: manual_bedroom_light
    on_state:
      then:
        - if:
            condition:
              binary_sensor.is_on: manual_bedroom_light
            then:
              - switch.turn_on: bedroom_light
            else:
              - switch.turn_off: bedroom_light

  - platform: gpio
    pin:
      number: 16
      inverted: true
      mode: INPUT_PULLUP
    name: "Bedroom Night Light Manual Control"
    id: manual_bedroom_night_light
    on_state:
      then:
        - if:
            condition:
              binary_sensor.is_on: manual_bedroom_night_light
            then:
              - switch.turn_on: bedroom_night_light
            else:
              - switch.turn_off: bedroom_night_light

  - platform: gpio
    pin:
      number: 4
    name: "Bedroom Motion Sensor"
    device_class: motion

  - platform: gpio
    pin:
      number: 35
    name: "Bathroom Motion Sensor"
    device_class: motion


# DHT11 Temperature and Humidity Sensor
sensor:
  - platform: dht
    pin: 13
    temperature:
      name: "Room Temperature"
      unit_of_measurement: "Â°C"
      accuracy_decimals: 1
    humidity:
      name: "Room Humidity"
      unit_of_measurement: "%"
      accuracy_decimals: 1
    update_interval: 30s
